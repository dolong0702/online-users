{"ast":null,"code":"import * as signalR from '@microsoft/signalr';\nimport * as i0 from \"@angular/core\";\nexport class SignalRService {\n  constructor() {\n    this.hubConnection = new signalR.HubConnectionBuilder().withUrl(\"/onlineUsersHub\") // Đường dẫn đến Hub trên server\n    .build();\n    this.startConnection(); // Gọi hàm startConnection() để kết nối SignalR khi service được khởi tạo.\n  }\n\n  startConnection() {\n    this.hubConnection.start().then(() => {\n      console.log('SignalR connection started.');\n    }).catch(err => console.error('Error while starting SignalR connection: ', err));\n  }\n  // Các phương thức và xử lý SignalR khác trong service này\n  getHubConnection() {\n    return this.hubConnection;\n  }\n}\nSignalRService.ɵfac = function SignalRService_Factory(t) {\n  return new (t || SignalRService)();\n};\nSignalRService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SignalRService,\n  factory: SignalRService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;;AAK7C,OAAM,MAAOC,cAAc;EAGzBC;IACE,IAAI,CAACC,aAAa,GAAG,IAAIH,OAAO,CAACI,oBAAoB,EAAE,CACpDC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAAA,CAC3BC,KAAK,EAAE;IAEV,IAAI,CAACC,eAAe,EAAE,CAAC,CAAC;EAC1B;;EAEQA,eAAe;IACrB,IAAI,CAACJ,aAAa,CAACK,KAAK,EAAE,CAACC,IAAI,CAAC,MAAK;MACnCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,2CAA2C,EAAED,GAAG,CAAC,CAAC;EAClF;EAEA;EACOE,gBAAgB;IACrB,OAAO,IAAI,CAACZ,aAAa;EAC3B;;AApBWF,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["signalR","SignalRService","constructor","hubConnection","HubConnectionBuilder","withUrl","build","startConnection","start","then","console","log","catch","err","error","getHubConnection","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\source\\repos\\onlineUsers\\onlineUsers\\ClientApp\\src\\signlR.service.ts"],"sourcesContent":["// signalr.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SignalRService {\r\n  private hubConnection: signalR.HubConnection;\r\n\r\n  constructor() {\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl(\"/onlineUsersHub\") // Đường dẫn đến Hub trên server\r\n      .build();\r\n\r\n    this.startConnection(); // Gọi hàm startConnection() để kết nối SignalR khi service được khởi tạo.\r\n  }\r\n\r\n  private startConnection() {\r\n    this.hubConnection.start().then(() => {\r\n      console.log('SignalR connection started.');\r\n    }).catch(err => console.error('Error while starting SignalR connection: ', err));\r\n  }\r\n\r\n  // Các phương thức và xử lý SignalR khác trong service này\r\n  public getHubConnection(): signalR.HubConnection {\r\n    return this.hubConnection;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}